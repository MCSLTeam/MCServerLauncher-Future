imports:
  - MCServerLauncher.Common.System
  - MCServerLauncher.Daemon.Minecraft.Server
  - MCServerLauncher.Daemon.Minecraft.Server.Factory
  - MCServerLauncher.Daemon.Storage
  - MCServerLauncher.Daemon.Utils
  - Newtonsoft.Json
  - Newtonsoft.Json.Linq

actions:
  - ping:
      req:
      resp:
        time: long

  - get_java_list:
      req:
      resp:
        java_list: List<JavaScanner.JavaInfo>

  - file_upload_request:
      req:
        path: string?
        sha1: string?
        timeout: long?
        size: long
      
      resp:
        file_id: Guid

  - file_upload_chunk:
      req:
        file_id: Guid
        offset: long
        data: string
      
      resp:
        done: bool
        received: long

  - file_upload_cancel:
      req:
        file_id: Guid
      
      resp:

  - file_download_request:
      req:
        path: string
        timeout: long?
      
      resp:
        file_id: Guid
        size: long
        sha1: string

  - file_download_range:
      req:
        file_id: Guid
        range: string
      
      resp:
        content: string

  - file_download_close:
      req:
        file_id: Guid
      
      resp:

  - get_file_info:
      req:
        path: string
      
      resp:
        meta: FileMetadata

  - get_directory_info:
      req:
        path: string
      
      resp:
        parent: string?
        files: DirectoryEntry.FileInformation[]
        directories: DirectoryEntry.DirectoryInformation[]

  - try_add_instance:
      req:
        setting: InstanceFactorySetting
        factory: InstanceFactories
      
      resp:
        done: bool

  - try_remove_instance:
      req:
        id: Guid
      
      resp:
        done: bool

  - try_start_instance:
      req:
        id: Guid
      
      resp:
        done: bool

  - try_stop_instance:
      req:
        id: Guid
      
      resp:
        done: bool

  - send_to_instance:
      req:
        id: Guid
        message: string
      
      resp:

  - kill_instance:
      req:
        id: Guid
      
      resp:

  - get_instance_status:
      req:
        id: Guid
      
      resp:
        status: InstanceStatus

  - get_all_status:
      req:
      
      resp:
        status: IDictionary<Guid, InstanceStatus>

  - get_system_info:
      req:
      
      resp:
        info: SystemInfo